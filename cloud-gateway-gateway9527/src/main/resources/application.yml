server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true  #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment_routh #payment_route   #路由的ID，没有固定规则但要求唯一，建议配合服务名
          #uri: http://localhost:8001   #匹配后提供服务的路由地址
          uri: lb://CLOUD-PAYMENT-SERVICE  #匹配后提供的路由地址
          predicates:
          - Path=/payment/get/**   #断言，路径相匹配的进行路由

        - id: payment_routh2 #payment_route   #路由的ID，没有固定规则但要求唯一，建议配合服务名
          #uri: http://localhost:8001   #匹配后提供服务的路由地址
          uri: lb://CLOUD-PAYMENT-SERVICE  #匹配后提供的路由地址
          filters:
            - AddRequestParameter=X-Request-Id, 1024  #过滤器工厂会在匹配的请求头加上一对请求头，名称为X-Request-Id值为1024
          predicates:
          - Path=/payment/lb/**   #断言，路径相匹配的进行路由
          #- After=2021-02-20T18:21:16.899+08:00[Asia/Shanghai]   #断言，路径相匹配的进行路由
          #- Before=2021-02-21T22:17:10.689+08:00[Asia/Shanghai]  #断言，路径相匹配的进行路由
          #- Between=2021-02-20T18:21:16.899+08:00[Asia/Shanghai], 2021-02-21T22:17:10.689+08:00[Asia/Shanghai]
          #- Cookie=username, rongda
          #- Header=X-Request-Id, \d+  #请求头要有X-Request-Id属性并且值为整数的正则表达式
          #- Host=**.rongda.com
          #- Method=GET
          #- Query=username, \d+  #要有参数名username并且值还要是整数才能路由

         #id: 我们自定义的路由ID，保持唯一
          ##uri: 目标服务地址
          ##predicates: 路由条件，Predicate接受一个输入参数返回一个布尔值。
          ##            该属性包含多种默认方法来将Predicate组合成其他复杂的逻辑（比如：与、或、非）。

eureka:
  instance:
    hostname: cloud-gateway-service
  client: #服务提供者provider注册进eureka服务列表内
    register-with-eureka: true #表示是否将自己注册进EurekaServer 默认为true
    fetch-registry: true #表示是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合Ribbon使用负载均衡！！！
    service-url:
      #defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka #集群版
      defaultZone: http://eureka7001.com:7001/eureka #单机版

